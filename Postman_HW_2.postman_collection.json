{
	"info": {
		"_postman_id": "4e9a197c-e002-4acb-8273-3c767d10f93d",
		"name": "Postman_HW_2",
		"description": "[http://162.55.220.72:5005/first](http://162.55.220.72:5005/first)\n\n1. Отправить запрос.\n2. Статус код 200\n3. Проверить, что в body приходит правильный string.\n    \n\n[http://162.55.220.72:5005/user_info_3](http://162.55.220.72:5005/user_info_3)\n\n1. Отправить запрос.\n2. Статус код 200\n3. Спарсить response body в json.\n4. Проверить, что name в ответе равно name s request (name вбить руками.)\n5. Проверить, что age в ответе равно age s request (age вбить руками.)\n6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\n7. Спарсить request.\n8. Проверить, что name в ответе равно name s request (name забрать из request.)\n9. Проверить, что age в ответе равно age s request (age забрать из request.)\n10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\n11. Вывести в консоль параметр family из response.\n12. Проверить что u_salary_1_5_year в ответе равно salary\\*4 (salary забрать из request)\n    \n\n[http://162.55.220.72:5005/object_info_3](http://162.55.220.72:5005/object_info_3)\n\n1. Отправить запрос.\n2. Статус код 200\n3. Спарсить response body в json.\n4. Спарсить request.\n5. Проверить, что name в ответе равно name s request (name забрать из request.)\n6. Проверить, что age в ответе равно age s request (age забрать из request.)\n7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\n8. Вывести в консоль параметр family из response.\n9. Проверить, что у параметра dog есть параметры name.\n10. Проверить, что у параметра dog есть параметры age.\n11. Проверить, что параметр name имеет значение Luky.\n12. Проверить, что параметр age имеет значение 4.\n    \n\n[http://162.55.220.72:5005/object_info_4](http://162.55.220.72:5005/object_info_4)\n\n1. Отправить запрос.\n2. Статус код 200\n3. Спарсить response body в json.\n4. Спарсить request.\n5. Проверить, что name в ответе равно name s request (name забрать из request.)\n6. Проверить, что age в ответе равно age из request (age забрать из request.)\n7. Вывести в консоль параметр salary из request.\n8. Вывести в консоль параметр salary из response.\n9. Вывести в консоль 0-й элемент параметра salary из response.\n10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\n11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\n12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\n13. Проверить, что 1-й элемент параметра salary равен salary\\*2 из request (salary забрать из request.)\n14. Проверить, что 2-й элемент параметра salary равен salary\\*3 из request (salary забрать из request.)\n15. Создать в окружении переменную name\n16. Создать в окружении переменную age\n17. Создать в окружении переменную salary\n18. Передать в окружение переменную name\n19. Передать в окружение переменную age\n20. Передать в окружение переменную salary\n21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\n    \n\n[http://162.55.220.72:5005/user_info_2](http://162.55.220.72:5005/user_info_2)\n\n1. Вставить параметр salary из окружения в request\n2. Вставить параметр age из окружения в age\n3. Вставить параметр name из окружения в name\n4. Отправить запрос.\n5. Статус код 200\n6. Спарсить response body в json.\n7. Спарсить request.\n8. Проверить, что json response имеет параметр start_qa_salary\n9. Проверить, что json response имеет параметр qa_salary_after_6_months\n10. Проверить, что json response имеет параметр qa_salary_after_12_months\n11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\n12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\n13. Проверить, что json response имеет параметр person\n14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\n15. Проверить, что параметр qa_salary_after_6_months равен salary\\*2 из request (salary забрать из request.)\n16. Проверить, что параметр qa_salary_after_12_months равен salary\\*2.7 из request (salary забрать из request.)\n17. Проверить, что параметр qa_salary_after_1.5_year равен salary\\*3.3 из request (salary забрать из request.)\n18. Проверить, что параметр qa_salary_after_3.5_years равен salary\\*3.8 из request (salary забрать из request.)\n19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\n20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\n21. Проверить, что параметр u_salary_5_years равен salary\\*4.2 из request (salary забрать из request.)\n22. \\*_\\\\_Написать цикл который выведет в консоль по порядку элементы списка из параметра person.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27118737"
	},
	"item": [
		{
			"name": "First",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://162.55.220.72:5005/first"
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Daria\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(\"27\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"let req = request.data\r",
							"let resp = pm.response.json();\r",
							"let req_name = req.name;\r",
							"let req_age = req.age;\r",
							"let req_salary = +req.salary;\r",
							"\r",
							"pm.test(\"Check name from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log(resp.family)\r",
							"\r",
							"pm.test(\"Check u_salary_1_5_year\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(req_salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Daria",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": "http://162.55.220.72:5005/user_info_3"
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let req_url = pm.request.url.query.toObject()\r",
							"let req_name = req_url.name;\r",
							"let req_age = req_url.age;\r",
							"let req_salary = +req_url.salary\r",
							"\r",
							"pm.test(\"Check name from request.url\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age from request.url\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.age).to.eql(req_age);\r",
							"});\r",
							"pm.test(\"Check salary from request.url\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.salary).to.eql(req_salary);\r",
							"});\r",
							"console.log(resp.family)\r",
							"\r",
							"pm.test(\"Name property check\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Name property check 2\", function () {\r",
							"    pm.expect(resp.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Dog's name is Luky\", function () {\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Age is 4\", function () {\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Daria&age=27&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Daria"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let req_url = pm.request.url.query.toObject()\r",
							"let req_name = req_url.name;\r",
							"let req_age = req_url.age;\r",
							"\r",
							"pm.test(\"Check name from request.url\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(resp.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age from request.url\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(+resp.age).to.eql(+req_age);\r",
							"});\r",
							"\r",
							"console.log(\"request salary = \"+ req_url.salary);\r",
							"console.log(resp.salary)\r",
							"console.log(resp.salary[0])\r",
							"console.log(resp.salary[1])\r",
							"console.log(resp.salary[2])\r",
							"\r",
							"pm.test(\"Salary1 is equial to salary.req*2\", function () {\r",
							"    pm.expect(+resp.salary[1]).to.eql(+req_url.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary2 is equial to salary.req*3\", function () {\r",
							"    pm.expect(+resp.salary[2]).to.eql(+req_url.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\");\r",
							"pm.environment.set(\"age\");\r",
							"pm.environment.set(\"salary\");\r",
							"\r",
							"pm.environment.set(\"name\", resp.name);\r",
							"pm.environment.set(\"age\", resp.age);\r",
							"pm.environment.set(\"salary\", resp.salary);\r",
							"\r",
							"for (i in resp.salary) {\r",
							"    console.log(resp.salary[i]);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Daria&age=27&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Daria"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "1000"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp = pm.response.json();\r",
							"let req = request.data;\r",
							"\r",
							"pm.test(\"start_qa_salary_check\", function () {\r",
							"    pm.expect(resp).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months_check\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months_check\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year_check\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years_check\", function () {\r",
							"    pm.expect(resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"person_check\", function () {\r",
							"    pm.expect(resp).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary_check_from_request\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months_check_from_request\", function () {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(+req.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months_check_from_request\", function () {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(+req.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year_check_from_request\", function () {\r",
							"    pm.expect(resp['qa_salary_after_1.5_year']).to.eql(+req.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years_check_from_request\", function () {\r",
							"    pm.expect(resp['qa_salary_after_3.5_years']).to.eql(+req.salary*3.8);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"1st element from uname is equal req.salary\", function () {\r",
							"    pm.expect(resp.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"uage is equal req.uage\", function () {\r",
							"    pm.expect(resp.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years is equal salary*4.2\", function () {\r",
							"    pm.expect(resp.person.u_salary_5_years).to.eql(+req.salary*4.2);\r",
							"});\r",
							"\r",
							"for (key in resp.person) {\r",
							"    console.log(resp.person[key]);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{Name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{Age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{Salary}}",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": "http://162.55.220.72:5005/user_info_2"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Salary",
			"value": "1000"
		},
		{
			"key": "Age",
			"value": "27"
		},
		{
			"key": "Name",
			"value": "Daria"
		}
	]
}
